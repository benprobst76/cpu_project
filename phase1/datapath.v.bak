module datapath (
    input wire clock, clear,
    input wire [31:0] A, B,              // Inputs to ALU
    input wire [3:0] Op,                 // ALU operation selector
    input wire RZin, RZout,              // Control signals for Z register
    input wire RAin, RAout,              // Control signals for A register
    input wire RBin, RBout,              // Control signals for B register
    output wire [31:0] BusMuxOut,        // Bus output
    output wire [31:0] ALUResult         // ALU result
);

    // Wires for register outputs
    wire [31:0] BusMuxInRZ, BusMuxInRA, BusMuxInRB;

    // Instantiate Registers
    register RZ (.clear(clear), .clock(clock), .enable(RZin), .BusMuxOut(BusMuxOut), .BusMuxIn(BusMuxInRZ));
    register RA (.clear(clear), .clock(clock), .enable(RAin), .BusMuxOut(BusMuxOut), .BusMuxIn(BusMuxInRA));
    register RB (.clear(clear), .clock(clock), .enable(RBin), .BusMuxOut(BusMuxOut), .BusMuxIn(BusMuxInRB));

    // Instantiate Bus
    bus Bus (.BusMuxInRZ(BusMuxInRZ), .BusMuxInRA(BusMuxInRA), .BusMuxInRB(BusMuxInRB),
             .RZout(RZout), .RAout(RAout), .RBout(RBout), .BusMuxOut(BusMuxOut));

    // Instantiate ALU
    alu ALU (.A(A), .B(B), .Op(Op), .Result(ALUResult));
endmodule